[{"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\index.js":"1","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\reportWebVitals.js":"2","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\App.js":"3","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\catPanel\\index.js":"4","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\index.js":"5","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\pages\\flashcard\\index.js":"6","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\categories.js":"7","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\heading\\index.js":"8","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\flowers.js":"9","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\birds.js":"10","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\insects.js":"11","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\colours.js":"12","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\weather.js":"13","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\general.js":"14","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\pages\\login\\index.js":"15","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\loginButton\\index.js":"16","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\logoutButton\\index.js":"17","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\profile\\index.js":"18","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\mix.js":"19","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\animals.js":"20","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\pages\\results\\index.js":"21"},{"size":850,"mtime":1612964317769,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":807,"mtime":1612972823317,"results":"25","hashOfConfig":"23"},{"size":766,"mtime":1612964317709,"results":"26","hashOfConfig":"23"},{"size":1042,"mtime":1612964317753,"results":"27","hashOfConfig":"23"},{"size":11240,"mtime":1614354723268,"results":"28","hashOfConfig":"23"},{"size":1249,"mtime":1613524358516,"results":"29","hashOfConfig":"23"},{"size":337,"mtime":1611685312163,"results":"30","hashOfConfig":"23"},{"size":1687,"mtime":1612063539669,"results":"31","hashOfConfig":"23"},{"size":1514,"mtime":1613235729897,"results":"32","hashOfConfig":"23"},{"size":1131,"mtime":1612964317759,"results":"33","hashOfConfig":"23"},{"size":1246,"mtime":1612041178237,"results":"34","hashOfConfig":"23"},{"size":1560,"mtime":1612044353090,"results":"35","hashOfConfig":"23"},{"size":3429,"mtime":1612964317749,"results":"36","hashOfConfig":"23"},{"size":969,"mtime":1612964317776,"results":"37","hashOfConfig":"23"},{"size":411,"mtime":1612964317722,"results":"38","hashOfConfig":"23"},{"size":456,"mtime":1612964317732,"results":"39","hashOfConfig":"23"},{"size":733,"mtime":1612964317764,"results":"40","hashOfConfig":"23"},{"size":11591,"mtime":1612964317761,"results":"41","hashOfConfig":"23"},{"size":1422,"mtime":1612964317738,"results":"42","hashOfConfig":"23"},{"size":699,"mtime":1612973146751,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"98fhqd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\index.js",[],["90","91"],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\reportWebVitals.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\App.js",["92","93"],"import styles from \"./App.module.css\";\r\nimport Menu from \"./menu\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport FlashcardPanel from \"../pages/flashcard\";\r\nimport Results from \"../pages/results\";\r\nimport Login from \"../pages/login\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nfunction App() {\r\n  const { isAuthenticated } = useAuth0();\r\n  return (\r\n    <div className={styles.App}>\r\n      <Switch>\r\n        <Route exact path=\"/flashcardpanel/:title\">\r\n          <FlashcardPanel />\r\n        </Route>\r\n        <Route path=\"/results\">\r\n          <Results />\r\n        </Route>\r\n        <Route path=\"/\">{isAuthenticated ? <Menu /> : <Login />}</Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\catPanel\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\pages\\flashcard\\index.js",["94","95"],"import React, { useReducer, useEffect, useState } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Title from \"../../components/heading\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { categories } from \"../../components/menu/categories\";\r\nimport { Button, Select } from \"@chakra-ui/react\";\r\n\r\nconst shuffle = require(\"shuffle-array\");\r\n\r\n//bring in kanji as props\r\n//on button press (start/next), display a random kanji from the array\r\n//display random option answers from the array (or multi char input)\r\n//show correct/incorrect on 'submit' (stretch:or time up)\r\n//show 10 kanji per round, then show results\r\n\r\n//useReducer state - initial text (category name kanji or some image)\r\n//render random index of kanji array and 4 potential answers\r\n\r\nconst initialState = {\r\n  game: false,\r\n  rounds: 10, //up to 10 max (or customise later); if rounds <10 'next', else results\r\n  kanji: \"字\",\r\n  yomikata: \"かんじ\",\r\n  kanjiSet: [],\r\n};\r\n\r\nconst gameInitialState = {\r\n  score: 0,\r\n  correct: false,\r\n  incorrect: false,\r\n  roundSet: [], //kanji in here should not be added again as randomKanji.yomi\r\n  submit: false, //true if data for that q has been submitted - use to disable buttons\r\n};\r\n\r\n//reducer function to update game state object\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    default:\r\n      throw new Error();\r\n    //start the game with score at 0 and gen first kanji question\r\n    case \"start\":\r\n      return {\r\n        ...state,\r\n        game: true,\r\n        rounds: action.rounds,\r\n        kanjiSet: action.set,\r\n      };\r\n    //next kanji\r\n    case \"setKanji\":\r\n      return {\r\n        ...state,\r\n        kanji: action.kanji,\r\n        yomikata: action.answer,\r\n      };\r\n    case \"gameOver\":\r\n      return {\r\n        ...state,\r\n        game: false,\r\n        kanji: \"字\",\r\n        yomikata: \"かんじ\",\r\n      };\r\n  }\r\n}\r\nfunction gameReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"start\":\r\n      return {\r\n        score: 0,\r\n        correct: false,\r\n        incorrect: false,\r\n        roundSet: [],\r\n        submit: false,\r\n      };\r\n    case \"score\":\r\n      return {\r\n        ...state,\r\n        correct: true,\r\n        incorrect: false,\r\n        score: state.score + 1,\r\n      };\r\n    case \"noScore\":\r\n      return {\r\n        ...state,\r\n        correct: false,\r\n        incorrect: true,\r\n      };\r\n    case \"nextQuestion\":\r\n      return {\r\n        ...state,\r\n        correct: false,\r\n        incorrect: false,\r\n        submit: false,\r\n        //build an array of kanji that have been asked already\r\n        // !!! need to check this with .includes before setting question\r\n        // need to call this upon each generation of a randomKanji in func\r\n        roundSet: [...state.roundSet, action.usedKanji],\r\n      };\r\n    case \"select\":\r\n      return {\r\n        ...state,\r\n        submit: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nfunction FlashcardPanel({ kanji }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [gameState, gameDispatch] = useReducer(gameReducer, gameInitialState);\r\n  const { title } = useParams();\r\n  const [catData, setCatData] = useState(false);\r\n  const [answersOptions, setAnswersOptions] = useState([]);\r\n  const [correct, setCorrect] = useState(null);\r\n  const [rounds, setRounds] = useState(10);\r\n\r\n  useEffect(() => {\r\n    setCatData(\r\n      categories.find((categoryData) => categoryData.title === title).data\r\n    );\r\n    console.log({ state }, \"loaded \");\r\n  }, [catData, title]);\r\n\r\n  //function to generate a random kanji, set the answers array, shuffle and set state\r\n  function getRandomKanji() {\r\n    if (rounds > 0) {\r\n      let randomKanji;\r\n      let randomIndex = Math.floor(\r\n        Math.random() * (catData.length - 1 - 0 + 1) + 0\r\n      );\r\n      console.log(state, \"state\");\r\n      console.log(gameState, \"game state\");\r\n      randomKanji = catData[randomIndex];\r\n      //check if the random kanji has been used previously in the current game:\r\n      if (gameState.roundSet.includes(randomKanji)) {\r\n        //recursion - restart the random kanji generation if true\r\n        console.log(\"duplicate! recursion time!\");\r\n        getRandomKanji();\r\n      } else {\r\n        // setRandomKanji(catData[randomIndex]);\r\n        console.log(randomKanji, \"random kanji not in set\");\r\n        //dispatch to set states of 'correct' and add to 'used kanji' array to track questions:\r\n        gameDispatch({ type: \"nextQuestion\", usedKanji: randomKanji.kanji });\r\n        //dispatch to set the current round's kanji:\r\n        dispatch({\r\n          type: \"setKanji\",\r\n          kanji: randomKanji.kanji,\r\n          answer: randomKanji.yomi,\r\n        });\r\n      }\r\n      getAnswersOptions();\r\n\r\n      function getAnswersOptions() {\r\n        let answersArr = [randomKanji.yomi];\r\n        while (answersArr.length < 5) {\r\n          let randomAnswer =\r\n            catData[\r\n              Math.floor(Math.random() * (catData.length - 1 - 0 + 1) + 0)\r\n            ].yomi;\r\n          if (answersArr.includes(randomAnswer)) {\r\n            console.log(\"includes\");\r\n            //recursion if already included: avoids duplicates & regenerates answers arr\r\n            getAnswersOptions();\r\n          } else {\r\n            // console.log(\"no includes\");\r\n            // console.log(answersArr);\r\n            // answersArr.push(randomAnswer);\r\n            answersArr = [...answersArr, randomAnswer];\r\n          }\r\n        }\r\n        console.log({ answersArr }, \"answers array without duplicates\");\r\n\r\n        //shuffle the answers array using an npm package method:\r\n        shuffle(answersArr);\r\n        setAnswersOptions(answersArr);\r\n      }\r\n    } else if (rounds === 0) {\r\n      console.log(\"game over!\", \"score:\", gameState.score, gameState.roundSet);\r\n      dispatch({ type: \"gameOver\" });\r\n      return;\r\n    }\r\n  }\r\n\r\n  //function to handle whether the chosen option was correct - runs on click\r\n  //make correct answer button bg colour green, incorrect red\r\n  //popup 'CORRECT' or 'INCORRECT'\r\n  //display an x or a check by buttons\r\n\r\n  function handleResults(ans, i) {\r\n    if (ans === state.yomikata) {\r\n      console.log(\"正解です！\", gameState.score);\r\n      // console.log(answersOptions[i], \"answer\");\r\n      //dispatch method updates the user's score +1 if they are correct\r\n      gameDispatch({ type: \"score\" });\r\n      setCorrect(true);\r\n      //answersOptions[i] = `${answersOptions[i]} ☑`;\r\n    } else {\r\n      console.log(\"ばつ！\");\r\n      gameDispatch({ type: \"noScore\" });\r\n      setCorrect(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.backLink}>\r\n        <Link className={styles.link} to={\"/\"}>\r\n          ⇦\r\n        </Link>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <div>\r\n          <Title\r\n            text={rounds === 0 ? \"🌸 終了 🌸\" : \"🌸 \" + title + \" 🌸\"}\r\n          ></Title>\r\n        </div>\r\n\r\n        <h2 className={styles.score}>\r\n          {gameState.score}/{state.rounds}\r\n        </h2>\r\n        <div className={styles.flashcard}>\r\n          <div className={styles.characterStage}>\r\n            <h1 className={styles.character}>{state.kanji}</h1>\r\n          </div>\r\n          <div\r\n            className={\r\n              gameState.correct\r\n                ? styles.correctMessage\r\n                : styles.incorrectMessage\r\n            }\r\n            hidden={gameState.correct || gameState.incorrect ? false : true}\r\n          >\r\n            <h2>{gameState.correct ? `正解!` : state.yomikata}</h2>\r\n          </div>\r\n\r\n          <h2 className={rounds === 0 ? styles.gameOver : styles.gameOngoing}>\r\n            {rounds === 0\r\n              ? `Score: ${(gameState.score / state.rounds) * 100}%`\r\n              : \"\"}\r\n          </h2>\r\n          <div className={styles.responsesContainer}>\r\n            {answersOptions.map((ans, i) => {\r\n              return (\r\n                <Button\r\n                  style={{ color: \"black\" }}\r\n                  className={styles.answerButton}\r\n                  colorScheme={\r\n                    gameState.correct\r\n                      ? \"green\"\r\n                      : \"none\" && gameState.incorrect\r\n                      ? \"red\"\r\n                      : \"none\"\r\n                  }\r\n                  onClick={() => {\r\n                    gameDispatch({ type: \"select\" });\r\n                    handleResults(ans, i);\r\n                  }}\r\n                  key={ans}\r\n                  disabled={\r\n                    gameState.correct || gameState.incorrect || rounds === 0\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  {ans}\r\n                </Button>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <Button\r\n            disabled={rounds === 0 ? true : false}\r\n            display={gameState.submit ? true : \"none\"}\r\n            style={{\r\n              color: \"black\",\r\n              border: \"1px solid var(--mid-shade)\",\r\n              margin: \"10px\",\r\n              borderRadius: \"30px\",\r\n              fontSize: \"1.2em\",\r\n            }}\r\n            onClick={() => {\r\n              getRandomKanji();\r\n              setRounds(rounds - 1);\r\n              if (state.game === false) {\r\n                dispatch({ type: \"start\", set: catData, rounds: rounds });\r\n              }\r\n            }}\r\n          >\r\n            {gameState.correct || gameState.incorrect ? \"次へ\" : \"スキップ\"}\r\n          </Button>\r\n\r\n          <Select\r\n            placeholder=\"Rounds:\"\r\n            variant=\"outline\"\r\n            borderColor=\"var(--mid-shade)\"\r\n            color=\"black\"\r\n            isFullWidth=\"false\"\r\n            width=\"30vw\"\r\n            display={state.game ? \"none\" : true}\r\n          >\r\n            <option\r\n              value=\"10\"\r\n              onClick={() => {\r\n                setRounds(10);\r\n              }}\r\n            >\r\n              10\r\n            </option>\r\n            <option\r\n              value=\"20\"\r\n              onClick={() => {\r\n                setRounds(20);\r\n              }}\r\n            >\r\n              20\r\n            </option>\r\n            <option\r\n              value=\"50\"\r\n              onClick={() => {\r\n                setRounds(50);\r\n              }}\r\n            >\r\n              50\r\n            </option>\r\n          </Select>\r\n\r\n          <Button\r\n            style={{\r\n              border: \"1px solid var(--mid-shade)\",\r\n              margin: \"10px\",\r\n              borderRadius: \"30px\",\r\n              fontSize: \"1.2em\",\r\n              color: \"black\",\r\n            }}\r\n            display={state.game ? \"none\" : true}\r\n            onClick={() => {\r\n              getRandomKanji();\r\n              if (state.game === false) {\r\n                dispatch({ type: \"start\", set: catData, rounds: rounds });\r\n              }\r\n            }}\r\n          >\r\n            {state.game ? \"\" : \"開始\"}\r\n          </Button>\r\n        </div>\r\n        <Link to=\"/results\">\r\n          <p className={state.game ? styles.resultsOFF : styles.results}>\r\n            results\r\n          </p>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FlashcardPanel;\r\n","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\categories.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\heading\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\flowers.js",[],["96","97"],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\birds.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\insects.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\colours.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\weather.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\general.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\pages\\login\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\loginButton\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\logoutButton\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\profile\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\mix.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\animals.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\pages\\results\\index.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":24},{"ruleId":"102","severity":1,"message":"106","line":4,"column":27,"nodeType":"104","messageId":"105","endLine":4,"endColumn":33},{"ruleId":"102","severity":1,"message":"107","line":115,"column":10,"nodeType":"104","messageId":"105","endLine":115,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":123,"column":6,"nodeType":"110","endLine":123,"endColumn":22,"suggestions":"111"},{"ruleId":"98","replacedBy":"112"},{"ruleId":"100","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'correct' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["116"],["114"],["115"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [catData, state, title]",{"range":"119","text":"120"},[3552,3568],"[catData, state, title]"]