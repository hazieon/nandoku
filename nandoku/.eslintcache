[{"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\index.js":"1","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\reportWebVitals.js":"2","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\App.js":"3","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\catPanel\\index.js":"4","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\index.js":"5","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\pages\\flashcard\\index.js":"6","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\categories.js":"7","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\heading\\index.js":"8","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\flowers.js":"9","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\birds.js":"10","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\insects.js":"11","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\colours.js":"12","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\weather.js":"13","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\general.js":"14"},{"size":512,"mtime":1612047447418,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":519,"mtime":1611697232213,"results":"18","hashOfConfig":"16"},{"size":767,"mtime":1611697232219,"results":"19","hashOfConfig":"16"},{"size":776,"mtime":1611697232227,"results":"20","hashOfConfig":"16"},{"size":10847,"mtime":1612047096575,"results":"21","hashOfConfig":"16"},{"size":1049,"mtime":1612044678250,"results":"22","hashOfConfig":"16"},{"size":337,"mtime":1611685312163,"results":"23","hashOfConfig":"16"},{"size":1687,"mtime":1612033031502,"results":"24","hashOfConfig":"16"},{"size":1419,"mtime":1612034105030,"results":"25","hashOfConfig":"16"},{"size":1131,"mtime":1612028596916,"results":"26","hashOfConfig":"16"},{"size":1246,"mtime":1612041178237,"results":"27","hashOfConfig":"16"},{"size":1560,"mtime":1612044353090,"results":"28","hashOfConfig":"16"},{"size":3308,"mtime":1612044567269,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"98fhqd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\index.js",[],["62","63"],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\reportWebVitals.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\App.js",["64","65"],"import styles from \"./App.module.css\";\r\nimport Menu from \"./menu\";\r\nimport CatPanel from \"./catPanel/\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport FlashcardPanel from \"../pages/flashcard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={styles.App}>\r\n      <Route exact path=\"/flashcardpanel/:title\">\r\n        <FlashcardPanel />\r\n      </Route>\r\n      <Route exact path=\"/\">\r\n        <Menu />\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\catPanel\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\pages\\flashcard\\index.js",["66","67","68","69","70","71"],"import React, { useReducer, useEffect, useState } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Title from \"../../components/heading\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { categories } from \"../../components/menu/categories\";\r\nimport { Button, Box, Text, Center, VStack } from \"@chakra-ui/react\";\r\nconst shuffle = require(\"shuffle-array\");\r\n\r\n// let title = \"花\";\r\n// let kanji = [\r\n//   { kanji: \"薔薇\", yomi: \"ばら\" },\r\n//   { kanji: \"躑躅\", yomi: \"つつじ\" },\r\n//   { kanji: \"薊\", yomi: \"あざみ\" },\r\n//   { kanji: \"蒲公英\", yomi: \"たんぽぽ\" },\r\n//   { kanji: \"蘭\", yomi: \"らん\" },\r\n//   { kanji: \"菫\", yomi: \"すみれ\" },\r\n//   { kanji: \"鬱金香\", yomi: \"うっこんこう\" },\r\n//   { kanji: \"紫陽花\", yomi: \"あじさい\" },\r\n//   { kanji: \"菖蒲\", yomi: \"あやめ\" },\r\n//   { kanji: \"花梨\", yomi: \"かりん\" },\r\n//   { kanji: \"酸漿\", yomi: \"ほおずき\" },\r\n//   { kanji: \"百合\", yomi: \"ゆり\" },\r\n//   { kanji: \"秋桜\", yomi: \"こすもす\" },\r\n//   { kanji: \"桔梗\", yomi: \"ききょう\" },\r\n//   { kanji: \"百日紅\", yomi: \"さるすべり\" },\r\n//   { kanji: \"水芭蕉\", yomi: \"みずばしょう\" },\r\n//   { kanji: \"椿\", yomi: \"つばき\" },\r\n//   { kanji: \"萩\", yomi: \"はぎ\" },\r\n//   { kanji: \"向日葵\", yomi: \"ひまわり\" },\r\n//   { kanji: \"撫子\", yomi: \"なでしこ\" },\r\n// ];\r\n\r\n//bring in kanji as props\r\n//on button press (start/next), display a random kanji from the array\r\n//display random option answers from the array (or multi char input)\r\n//show correct/incorrect on 'submit' (stretch:or time up)\r\n//show 10 kanji per round, then show results\r\n\r\n//useReducer state - initial text (category name kanji or some image)\r\n//render random index of kanji array and 4 potential answers\r\n\r\nconst initialState = {\r\n  game: false,\r\n  kanji: \"字\",\r\n  yomikata: \"かんじ\",\r\n  kanjiSet: [],\r\n};\r\n\r\nconst gameInitialState = {\r\n  score: 0,\r\n  correct: false,\r\n  incorrect: false,\r\n  roundSet: [], //kanji in here should not be added again as randomKanji.yomi\r\n  rounds: 0, //up to 10 max (or customise later); if rounds <10 'next', else results\r\n  // submit: false, //true if data for that q has been submitted - use to disable buttons\r\n};\r\n//reducer function to update game state object\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    default:\r\n      throw new Error();\r\n    //start the game with score at 0 and gen first kanji question\r\n    case \"start\":\r\n      return {\r\n        ...state,\r\n        game: true,\r\n        score: 0,\r\n        kanjiSet: action.set,\r\n      };\r\n    //next kanji\r\n    case \"setKanji\":\r\n      return {\r\n        ...state,\r\n        kanji: action.kanji,\r\n        yomikata: action.answer,\r\n      };\r\n    case \"gameOver\":\r\n      return {\r\n        ...state,\r\n        game: false,\r\n        kanji: \"字\",\r\n        yomikata: \"かんじ\",\r\n      };\r\n  }\r\n}\r\nfunction gameReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"start\":\r\n      return {\r\n        score: 0,\r\n        correct: false,\r\n        incorrect: false,\r\n        roundSet: [],\r\n        rounds: 0,\r\n        submit: false,\r\n      };\r\n    case \"score\":\r\n      return {\r\n        ...state,\r\n        correct: true,\r\n        incorrect: false,\r\n        score: state.score + 1,\r\n      };\r\n    case \"noScore\":\r\n      return {\r\n        ...state,\r\n        correct: false,\r\n        incorrect: true,\r\n      };\r\n    case \"nextQuestion\":\r\n      return {\r\n        ...state,\r\n        correct: false,\r\n        incorrect: false,\r\n        rounds: state.rounds + 1,\r\n        submit: false,\r\n        //build an array of kanji that have been asked already\r\n        // !!! need to check this with .includes before setting question\r\n        // need to call this upon each generation of a randomKanji in func\r\n        roundSet: [...state.roundSet, action.usedKanji],\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nfunction FlashcardPanel({ kanji }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [gameState, gameDispatch] = useReducer(gameReducer, gameInitialState);\r\n  const { title } = useParams();\r\n  const [catData, setCatData] = useState(false);\r\n  const [answersOptions, setAnswersOptions] = useState([]);\r\n  const [correct, setCorrect] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setCatData(\r\n      categories.find((categoryData) => categoryData.title === title).data\r\n    );\r\n    console.log({ state }, \"loaded \");\r\n  }, [catData, title]);\r\n\r\n  //function to generate a random kanji, set the answers array, shuffle and set state\r\n  function getRandomKanji() {\r\n    if (gameState.rounds < 10) {\r\n      let randomKanji;\r\n      let randomIndex = Math.floor(\r\n        Math.random() * (catData.length - 1 - 0 + 1) + 0\r\n      );\r\n      console.log(state, \"state\");\r\n      console.log(gameState, \"game state\");\r\n      randomKanji = catData[randomIndex];\r\n      //check if the random kanji has been used previously in the current game:\r\n      if (gameState.roundSet.includes(randomKanji)) {\r\n        //recursion - restart the random kanji generation if true\r\n        console.log(\"duplicate! recursion time!\");\r\n        getRandomKanji();\r\n      } else {\r\n        // setRandomKanji(catData[randomIndex]);\r\n        console.log(randomKanji, \"random kanji not in set\");\r\n\r\n        //dispatch to set states of 'correct' and add to 'used kanji' array to track questions:\r\n        gameDispatch({ type: \"nextQuestion\", usedKanji: randomKanji.kanji });\r\n        //dispatch to set the current round's kanji:\r\n        dispatch({\r\n          type: \"setKanji\",\r\n          kanji: randomKanji.kanji,\r\n          answer: randomKanji.yomi,\r\n        });\r\n      }\r\n      getAnswersOptions();\r\n\r\n      function getAnswersOptions() {\r\n        let answersArr = [randomKanji.yomi];\r\n        while (answersArr.length < 4) {\r\n          let randomAnswer =\r\n            catData[\r\n              Math.floor(Math.random() * (catData.length - 1 - 0 + 1) + 0)\r\n            ].yomi;\r\n          if (answersArr.includes(randomAnswer)) {\r\n            console.log(\"includes\");\r\n            //recursion if already included: avoids duplicates & regenerates answers arr\r\n            getAnswersOptions();\r\n          } else {\r\n            // console.log(\"no includes\");\r\n            // console.log(answersArr);\r\n            // answersArr.push(randomAnswer);\r\n            answersArr = [...answersArr, randomAnswer];\r\n          }\r\n        }\r\n        console.log({ answersArr }, \"answers array without duplicates\");\r\n\r\n        //shuffle the answers array using an npm package method:\r\n        shuffle(answersArr);\r\n        setAnswersOptions(answersArr);\r\n      }\r\n    } else {\r\n      console.log(\"game over!\", \"score:\", gameState.score, gameState.roundSet);\r\n      dispatch({ type: \"gameOver\" });\r\n      return;\r\n    }\r\n  }\r\n\r\n  //function to handle whether the chosen option was correct - runs on click\r\n  //make correct answer button bg colour green, incorrect red\r\n  //popup 'CORRECT' or 'INCORRECT'\r\n  //display an x or a check by buttons\r\n\r\n  function handleResults(ans, i) {\r\n    if (ans === state.yomikata) {\r\n      console.log(\"正解です！\", gameState.score);\r\n      // console.log(answersOptions[i], \"answer\");\r\n      //dispatch method updates the user's score +1 if they are correct\r\n      gameDispatch({ type: \"score\" });\r\n      setCorrect(true);\r\n      //answersOptions[i] = `${answersOptions[i]} ☑`;\r\n    } else {\r\n      console.log(\"ばつ！\");\r\n      gameDispatch({ type: \"noScore\" });\r\n      setCorrect(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Link className={styles.link} to={\"/\"}>\r\n        ⇦\r\n      </Link>\r\n\r\n      <div>\r\n        <Title text={gameState.rounds >= 10 ? \"Game Over?\" : title}></Title>\r\n      </div>\r\n\r\n      <h2 className={styles.score}>{gameState.score}</h2>\r\n      <div className={styles.flashcard}>\r\n        <div className={styles.characterStage}>\r\n          <h1 className={styles.character}>{state.kanji}</h1>\r\n        </div>\r\n        <h2\r\n          className={\r\n            gameState.correct ? styles.correctMessage : styles.incorrectMessage\r\n          }\r\n          hidden={gameState.correct || gameState.incorrect ? false : true}\r\n        >\r\n          {gameState.correct\r\n            ? \"正解!\"\r\n            : \"\" || gameState.incorrect\r\n            ? \"ばつ\"\r\n            : \"\"}\r\n        </h2>\r\n        <h2\r\n          className={\r\n            gameState.rounds >= 10 ? styles.gameOver : styles.gameOngoing\r\n          }\r\n        >\r\n          {gameState.rounds >= 10 ? `Score: ${gameState.score * 10}%` : \"\"}\r\n        </h2>\r\n        <div className={styles.responsesContainer}>\r\n          {answersOptions.map((ans, i) => {\r\n            return (\r\n              <Button\r\n                className={styles.answerButton}\r\n                colorScheme={\r\n                  gameState.correct\r\n                    ? \"green\"\r\n                    : \"none\" && gameState.incorrect\r\n                    ? \"red\"\r\n                    : \"none\"\r\n                }\r\n                onClick={() => {\r\n                  handleResults(ans, i);\r\n                }}\r\n                key={ans}\r\n                disabled={\r\n                  gameState.correct ||\r\n                  gameState.incorrect ||\r\n                  gameState.rounds >= 10\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                {ans}\r\n              </Button>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <Button\r\n          disabled={gameState.rounds >= 10 ? true : false}\r\n          style={{ margin: \"10px\", borderRadius: \"30px\", fontSize: \"1.2em\" }}\r\n          onClick={() => {\r\n            getRandomKanji();\r\n            if (state.game === false) {\r\n              dispatch({ type: \"start\", set: catData });\r\n            }\r\n          }}\r\n        >\r\n          {state.game\r\n            ? gameState.correct || gameState.incorrect\r\n              ? \"次\"\r\n              : \"submit\"\r\n            : \"スタート\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlashcardPanel;\r\n\r\n// //asynchronous useEffect to call dispatch functions when random kanji is set\r\n// useEffect(() => {\r\n//   console.log(randomKanji, \"random kanji not in set, useEffect ran\");\r\n//   //dispatch to set states of 'correct' and add to 'used kanji' array to track questions:\r\n//   gameDispatch({ type: \"nextQuestion\", usedKanji: randomKanji.kanji });\r\n//   //dispatch to set the current round's kanji:\r\n//   dispatch({\r\n//     type: \"setKanji\",\r\n//     kanji: randomKanji.kanji,\r\n//     answer: randomKanji.yomi,\r\n//   });\r\n// }, [randomKanji]);\r\n\r\n// {/* <button\r\n//       id=\"our-button-comrade\"\r\n//       onClick={randomKanji}\r\n//       style={{ marginRight: \"10px\" }}\r\n//     >\r\n//       random kanji\r\n//     </button> */}\r\n","C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\categories.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\heading\\index.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\flowers.js",[],["72","73"],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\birds.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\insects.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\colours.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\weather.js",[],"C:\\Users\\SENCH\\Documents\\Projekts\\prog\\nandoku\\nandoku\\nandoku\\src\\components\\menu\\general.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":24},{"ruleId":"78","severity":1,"message":"83","line":7,"column":18,"nodeType":"80","messageId":"81","endLine":7,"endColumn":21},{"ruleId":"78","severity":1,"message":"84","line":7,"column":23,"nodeType":"80","messageId":"81","endLine":7,"endColumn":27},{"ruleId":"78","severity":1,"message":"85","line":7,"column":29,"nodeType":"80","messageId":"81","endLine":7,"endColumn":35},{"ruleId":"78","severity":1,"message":"86","line":7,"column":37,"nodeType":"80","messageId":"81","endLine":7,"endColumn":43},{"ruleId":"78","severity":1,"message":"87","line":134,"column":10,"nodeType":"80","messageId":"81","endLine":134,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":141,"column":6,"nodeType":"90","endLine":141,"endColumn":22,"suggestions":"91"},{"ruleId":"74","replacedBy":"92"},{"ruleId":"76","replacedBy":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'CatPanel' is defined but never used.","Identifier","unusedVar","'ChakraProvider' is defined but never used.","'Box' is defined but never used.","'Text' is defined but never used.","'Center' is defined but never used.","'VStack' is defined but never used.","'correct' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["96"],["94"],["95"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [catData, state, title]",{"range":"99","text":"100"},[4258,4274],"[catData, state, title]"]